// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "models"
)

// GetUserByIDReader is a Reader for the GetUserByID structure.
type GetUserByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUserByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUserByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserByIDOK creates a GetUserByIDOK with default headers values
func NewGetUserByIDOK() *GetUserByIDOK {
	return &GetUserByIDOK{}
}

/*GetUserByIDOK handles this case with default header values.

successful operation
*/
type GetUserByIDOK struct {
	Payload *models.User
}

func (o *GetUserByIDOK) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdOK  %+v", 200, o.Payload)
}

func (o *GetUserByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByIDBadRequest creates a GetUserByIDBadRequest with default headers values
func NewGetUserByIDBadRequest() *GetUserByIDBadRequest {
	return &GetUserByIDBadRequest{}
}

/*GetUserByIDBadRequest handles this case with default header values.

Invalid ID supplied
*/
type GetUserByIDBadRequest struct {
}

func (o *GetUserByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdBadRequest ", 400)
}

func (o *GetUserByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserByIDNotFound creates a GetUserByIDNotFound with default headers values
func NewGetUserByIDNotFound() *GetUserByIDNotFound {
	return &GetUserByIDNotFound{}
}

/*GetUserByIDNotFound handles this case with default header values.

User not found
*/
type GetUserByIDNotFound struct {
}

func (o *GetUserByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{id}][%d] getUserByIdNotFound ", 404)
}

func (o *GetUserByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
