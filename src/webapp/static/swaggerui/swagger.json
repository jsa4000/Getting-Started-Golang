{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a sample WebApp go server",
    "title": "WebApp",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "jsa4000@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/roles": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Roles"
        ],
        "summary": "Get All roles",
        "operationId": "getAllRoles",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Roles"
        ],
        "summary": "Creates a new role",
        "operationId": "createRole",
        "parameters": [
          {
            "description": "Role object that needs to be added",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createRoleRequest"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "description": "Returns a single role",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Roles"
        ],
        "summary": "Find role by ID",
        "operationId": "getRoleById",
        "parameters": [
          {
            "type": "string",
            "description": "ID of role to return",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Role not found"
          }
        }
      },
      "delete": {
        "description": "Deletes a single role",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Roles"
        ],
        "summary": "Delete role by ID",
        "operationId": "deleteRoleById",
        "parameters": [
          {
            "type": "string",
            "description": "ID of role to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Get All users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Creates a new user",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "User object that needs to be added",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUserRequest"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Returns a single user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Find user by ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "type": "string",
            "description": "ID of user to return",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "description": "Deletes a single user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "type": "string",
            "description": "ID of user to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "createRoleRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "createUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "description": "Access to user endpoints",
      "name": "Users",
      "externalDocs": {
        "description": "Documentation at",
        "url": "http://localhost:8080/docs/users"
      }
    },
    {
      "description": "Access to role endpoints",
      "name": "Roles",
      "externalDocs": {
        "description": "Documentation at",
        "url": "http://localhost:8080/docs/roles"
      }
    }
  ],
  "externalDocs": {
    "description": "Find out more about WebApp",
    "url": "http://localhost:8080/index.html"
  }
}